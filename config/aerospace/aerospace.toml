# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = [
# 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
# ]

after-startup-command = [
  'exec-and-forget sketchybar >> $HOME/.sketchybar/service.log 2>&1',
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
]

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE FOCUSED_DISPLAY=$(aerospace list-monitors --focused | awk "{print $1}")',
]

#dont change mouse pos
#on-focus-changed = ['move-mouse window-lazy-center']

# Notify Sketchybar about focuse change
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
on-focus-changed = [
  'exec-and-forget sketchybar --trigger aerospace_focus_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.Â§github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
#on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# for multi monitor
# 1 mcBuk
# 2 main monitor
# 3 crapSung
[workspace-to-monitor-force-assignment]
1 = 'LG FHD'
O = 'built-in'
P = 'BenQ GW2490T'

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical = 0
outer.left = 0
outer.bottom = 0
# outer.top = [{ monitor."Built-in" = 0 }, { monitor."BenQ" = 0 }, 24]
outer.top = 0
outer.right = 0

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,

[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# alt-h = 'focus left'
# alt-j = 'focus down'
# alt-k = 'focus up'
# alt-l = 'focus right'
alt-h = 'focus left --boundaries all-monitors-outer-frame'
alt-j = 'focus down --boundaries all-monitors-outer-frame'
alt-k = 'focus up --boundaries all-monitors-outer-frame'
alt-l = 'focus right --boundaries all-monitors-outer-frame'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
alt-b = 'workspace B'
# alt-c = 'workspace C' -- disabled for clipboard
alt-d = 'workspace D'
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-m = 'workspace M'
# alt-n = 'workspace N'
alt-o = 'workspace O'
alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
# alt-u = 'workspace U'
alt-v = 'workspace V'
# alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# see: https://nikitabobko.github.io/aerospace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
# alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
# alt-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
# alt-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
# alt-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
# alt-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
alt-shift-a = 'move-node-to-workspace A --focus-follows-window'
alt-shift-b = 'move-node-to-workspace B --focus-follows-window'
# alt-shift-c = 'move-node-to-workspace c' -- disabled for clipboard
alt-shift-d = 'move-node-to-workspace D --focus-follows-window'
# alt-shift-e = 'move-node-to-workspace e --focus-follows-window'
# alt-shift-f = 'move-node-to-workspace f --focus-follows-window' 
# alt-shift-g = 'move-node-to-workspace g --focus-follows-window'
# alt-shift-i = 'move-node-to-workspace i --focus-follows-window'
# alt-shift-m = 'move-node-to-workspace m --focus-follows-window'
# alt-shift-n = 'move-node-to-workspace n --focus-follows-window'
alt-shift-o = 'move-node-to-workspace O --focus-follows-window'
alt-shift-p = 'move-node-to-workspace P --focus-follows-window'
# alt-shift-q = 'move-node-to-workspace q --focus-follows-window'
# alt-shift-r = 'move-node-to-workspace r --focus-follows-window'
alt-shift-s = 'move-node-to-workspace S --focus-follows-window'
alt-shift-t = 'move-node-to-workspace T --focus-follows-window'
# alt-shift-u = 'move-node-to-workspace u --focus-follows-window'
alt-shift-v = 'move-node-to-workspace V --focus-follows-window'
# alt-shift-w = 'move-node-to-workspace w --focus-follows-window'
# alt-shift-x = 'move-node-to-workspace x --focus-follows-window'
# alt-shift-y = 'move-node-to-workspace y --focus-follows-window'
# alt-shift-z = 'move-node-to-workspace z --focus-follows-window'
alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = ['move-workspace-to-monitor --wrap-around next']

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = [
  'mode service',
  'exec-and-forget sketchybar --trigger aerospace_enter_service_mode',
]

# focus monitor
alt-u = 'focus-monitor left'
alt-i = 'focus-monitor right'

# move workspace to specific monitor
alt-shift-u = 'move-workspace-to-monitor left'
alt-shift-i = 'move-workspace-to-monitor right'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = [
  'reload-config',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
] # Toggle between floating and tiling layout
backspace = [
  'close-all-windows-but-current',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = [
  'join-with left',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]
alt-shift-j = [
  'join-with down',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]
alt-shift-k = [
  'join-with up',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]
alt-shift-l = [
  'join-with right',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]
alt-shift-r = [
  'exec-and-forget /opt/homebrew/bin/sketchybar --reload',
  'exec-and-forget sketchybar --trigger aerospace_leave_service_mode',
]

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
run = 'move-node-to-workspace T'

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace T'

# [[on-window-detected]]
# if.app-id = 'org.alacritty'
# run = 'move-node-to-workspace T'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'com.automattic.beeper.desktop'
run = 'move-node-to-workspace B'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Safari.WebApp.B4D41913-DB5F-44DD-9AE9-8AD2DFEE8643'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.github.th-ch.youtube-music'
run = ['layout floating']


[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = ["layout tiling"]
